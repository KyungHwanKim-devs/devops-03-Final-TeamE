name: front-deploy

on:
  push:
    branches: [main]
    paths:
      - front/**

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: teame-front-dev
jobs:
  ci:
    name: ci
    runs-on: ubuntu-20.04
    outputs:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd front
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "레포지토리 {{ EVENT_PAYLOAD.repository.full_name }} 프론트의 도커파일 빌드가 성공해서 ECR로 푸시를 완료했습니다."

  cd:
    needs: [ci]
    name: cd
    runs-on: ubuntu-latest
    steps:
      - name: checkout target repo
        uses: actions/checkout@v3

      - name: replace tag
        uses: mikefarah/yq@master
        env:
          VALUE: 804394216826.dkr.ecr.ap-northeast-2.amazonaws.com/teame-front-dev:${{needs.ci.outputs.IMAGE_TAG}}
        with:
          cmd: yq eval -i '.spec.template.spec.containers[0].image = env(VALUE)' 'gitops/apps/front/deployment.yaml'

      - name: Push config repo
        run: |
          git config --global user.email "kkhdevs@gmail.com"
          git config --global user.name "KyungHwanKim-devs"
          git config --global init.defaultBranch "main"
          git add .
          git commit -m "Image build"
          git push origin main

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "레포지토리 {{ EVENT_PAYLOAD.repository.full_name }} 프론트의 gitops 폴더에 도커이미지 주소가 업데이트 되었습니다."
